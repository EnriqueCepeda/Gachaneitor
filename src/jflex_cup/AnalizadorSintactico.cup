/* ----------------------Seccion de declaraciones package e imports--------------------*/

import java_cup.runtime.*;

import java.util.ArrayList;

import java.io.OutputStreamWriter;
import java.io.OutputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.nio.charset.StandardCharsets;

/* ----------------------Seccion componentes de codigo de usuario --------------------*/

parser code{:

    public ConversorUnidades cu = new ConversorUnidades();

    public static void escribir_receta(ArrayList<Receta> recetas){
        String text = "[";
        for (int i = 0; i< recetas.size()-1; i++){
            text = text + recetas.get(i).toString() + ", ";
        }
        text = text + recetas.get(recetas.size()-1).toString()+"]";

        try{
            OutputStream os = new FileOutputStream("salida.json");
            PrintWriter pw = new PrintWriter(new OutputStreamWriter(os, "UTF-8"));
            pw.write(text);
            pw.close();
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    
:}


/* ------------Declaracion de la lista de simbolos de la gramatica-----------*/

terminal Integer numero;
terminal String ident_nombre, contenido_descripcion, unidad_cantidad, unidad_temp, unidad_tiempo, verbo_mov, verbo_coc, verbo_per, digito_velocidad;
terminal receta, descripcion, nombre, tiempo, total, preparacion, dospuntos, puntoycoma, guion, pasos, ingredientes, temperatura, velocidad, llave_abierta, llave_cerrada, comilla;

non terminal INICIO, RECETA, NOMBRE, DESCRIPCION, TIEMPO_RECETA, INGREDIENTES, LISTA_INGREDIENTES, INGREDIENTE, PASOS, LISTA_PASOS, PASO, PASO_MOV, PASO_COC, PASO_PER, TIEMPO, CANTIDAD, TEMPERATURA, VELOCIDAD;


/* -------------Declaracion de precedencias -----------*/



/* --------------Declaracion de la gramatica -----------*/

INICIO ::= 
    RECETA:r {: ArrayList<Receta> lista = new ArrayList<Receta>(); lista.add((Receta)r); escribir_receta(lista); RESULT=lista;:}
    | RECETA:r INICIO:lr {:((ArrayList<Receta>)lr).add(0, (Receta)r); escribir_receta((ArrayList<Receta>)lr); RESULT=lr;:}
    ;

RECETA ::= 
    receta llave_abierta NOMBRE:n DESCRIPCION:d TIEMPO_RECETA:tr INGREDIENTES:i PASOS:p llave_cerrada {:RESULT = new Receta((String)n, (String)d, (Tiempo)tr, (ArrayList<Ingrediente>)i, (ArrayList<Paso>)p);:}
    ;


NOMBRE ::= 
    nombre comilla ident_nombre:n comilla {:RESULT=n;:}
    | comilla ident_nombre:n comilla {:RESULT=n;:}
    ;

DESCRIPCION ::= 
    descripcion contenido_descripcion:cn {:RESULT=cn;:}
    | contenido_descripcion:cn {:RESULT=cn;:}
    ;

TIEMPO_RECETA ::=
    tiempo llave_abierta total TIEMPO:tt preparacion TIEMPO:tp llave_cerrada {:RESULT = new Tiempo((Cantidad)tt, (Cantidad)tp);:}
    ;

INGREDIENTES ::= ingredientes llave_abierta LISTA_INGREDIENTES:li llave_cerrada {:li = ComprobadorSemantica.comprobarIngredientes((ArrayList<Ingrediente>)li); RESULT = li;:};

LISTA_INGREDIENTES ::= 
    INGREDIENTE:i puntoycoma {:ArrayList<Ingrediente> lista = new ArrayList<Ingrediente>(); lista.add((Ingrediente)i); RESULT = lista;:}
    | INGREDIENTE:i puntoycoma LISTA_INGREDIENTES:li {:((ArrayList<Ingrediente>)li).add(0, (Ingrediente)i); RESULT = li;:}; 

INGREDIENTE ::= comilla ident_nombre:in comilla dospuntos CANTIDAD:c {:RESULT = new Ingrediente(in, (Cantidad)c);:};

PASOS ::=
    pasos llave_abierta LISTA_PASOS:lp llave_cerrada {:RESULT = lp;:}
    ;
    
LISTA_PASOS ::= 
    PASO:p {:ArrayList<Paso> lista = new ArrayList<Paso>(); lista.add((Paso)p); RESULT = lista;:}
    | PASO:p LISTA_PASOS:lp {:((ArrayList<Paso>)lp).add(0, (Paso)p); RESULT = lp;:}
    ;

PASO ::=
    PASO_MOV:pm {:RESULT = pm;:}
    | PASO_COC:pc {:RESULT = pc;:}
    | PASO_PER:pp {:RESULT = pp;:}
    ;

PASO_MOV ::= guion verbo_mov:vm LISTA_INGREDIENTES:li TIEMPO:t VELOCIDAD:v {:RESULT = new Paso_mov(vm, "mover", (ArrayList<Ingrediente>)li, (Cantidad)t, (String)v);:};
PASO_COC ::= guion verbo_coc:vc LISTA_INGREDIENTES:li TIEMPO:t TEMPERATURA:temp {:RESULT = new Paso_coc(vc, "cocinar", (ArrayList<Ingrediente>)li, (Cantidad)t, (Cantidad)temp);:};
PASO_PER ::= guion verbo_per:vp LISTA_INGREDIENTES:li {:RESULT = new Paso_per(vp, "persona", (ArrayList<Ingrediente>)li);:};

CANTIDAD ::= numero:n unidad_cantidad:uc {: RESULT = new Cantidad(n, uc);:};
TIEMPO ::= numero:n unidad_tiempo:uc {: RESULT = new Cantidad(n, uc);:};
TEMPERATURA ::= temperatura numero:n unidad_temp:uc {:RESULT = new Cantidad(n, uc);:};
VELOCIDAD ::= velocidad digito_velocidad:dv {:RESULT=dv;:};

